#include <iostream>
using namespace std;

//菜单界面
void showMenu()
{
	cout << "**********************" << endl;
	cout << "*****1.添加联系人*****" << endl;
	cout << "*****2.显示联系人*****" << endl;
	cout << "*****3.删除联系人*****" << endl;
	cout << "*****4.查找联系人*****" << endl;
	cout << "*****5.修改联系人*****" << endl;
	cout << "*****6.清空联系人*****" << endl;
	cout << "*****7.退出通讯录*****" << endl;
	cout << "**********************" << endl;

}

#include <string>
#define MAX 100	
//通讯录人员
struct person
{
	string m_name;
	int m_sex;
	int m_age;
	string m_phone;
	string m_addr;
};
//通讯录结构体
struct addressbooks
{
	struct person personarray[MAX];
	
	int m_size;//联系人个数
	
};
//1.添加联系人
void addperson(addressbooks* abs)
{
	//判断通讯录是否满
	if (abs->m_size == MAX)
	{
		cout << "通讯录已满，无法添加" << endl;
		return;
	}
	else
	{	//姓名
		string name;
		cout << "请输入姓名" << endl;
		cin >> name;
		abs->personarray[abs->m_size].m_name = name;
		//姓别
		cout << "请输入姓别(1-男，2-女)" << endl;
		int sex = 0;
		while (true)
		{
			cin >> sex; 
			if (sex == 1 || sex == 2)
			{
				abs->personarray[abs->m_size].m_sex = sex;
				break;
			}
			cout << "输入有误，重新输入" << endl;

		}
		//年
		cout << "请输入年龄" << endl;
		int age = 0;
		cin >> age;
		abs->personarray[abs->m_size].m_age = age;

		//电话
		cout << "请输入电话" << endl;
		string phone;
		cin >> phone;
		abs->personarray[abs->m_size].m_phone = phone;
		//住址
		cout << "请输入家庭住址" << endl;
		string address;
		cin >> address;
		abs->personarray[abs->m_size].m_addr = address;
		//更新通讯录人数
		abs->m_size++;
		cout << "添加成功" << endl;

		system("pause");//请按任意键继续
		system("cls");//清屏操作

	}
}

//显示联系人
void showperson(addressbooks *abs)
{
	if (abs->m_size==0)
	{
		cout << "空" << endl;
	}
	else
	{
		for (int i = 0; i < abs->m_size; i++)
		{
			cout << "姓名："<<abs->personarray[i].m_name << endl;
			cout << "性别：" << (abs->personarray[i].m_sex ==1?"男":"女") << endl;
			cout << "年龄：" << abs->personarray[i].m_age << endl;
			cout << "电话：" << abs->personarray[i].m_phone << endl;//endl 换行     "\t" 空格
			cout << "住址：" << abs->personarray[i].m_addr << endl;
		}
	}
	system("pause");//请按任意键继续
	system("cls");//清屏操作
}
//删除
int isexist(addressbooks* abs, string name)
{
	for (int i = 0; i < abs->m_size; i++)
	{
		if (abs->personarray[i].m_name==name)
		{
			return i;
		}
	}
	return -1;
}
void deleteperson(addressbooks* abs)
{
	cout << "输入要删除人的姓名" << endl;
	string name;
	cin >> name;

	int ret = isexist(abs, name);
	if (ret!=-1)
	{
		for (int i = 0; i < abs->m_size; i++)
		{
			abs->personarray[i] = abs->personarray[i + 1];
		}
		abs->m_size--;
		cout << "删除成功" << endl;
	}
	else
	{
		cout << "查无此人" << endl;
	}
	system("pause");//请按任意键继续
	system("cls");//清屏操作
}
//4.查找
void findperson(addressbooks* abs)
{
	cout<<"输入要查找的人" << endl;
	string name;
	cin >> name;

	int ret = isexist(abs, name);
	if (ret != -1)
	{
		cout << "找到此人" << endl;
		cout << "姓名：" << abs->personarray[ret].m_name << endl;
		cout << "性别：" << (abs->personarray[ret].m_sex == 1 ? "男" : "女") << endl;
		cout << "年龄：" << abs->personarray[ret].m_age << endl;
		cout << "电话：" << abs->personarray[ret].m_phone << endl;//endl 换行     "\t" 空格
		cout << "住址：" << abs->personarray[ret].m_addr << endl;
	}
	else
	{
		cout << "查无此人" << endl;
	}

	system("pause");//请按任意键继续
	system("cls");//清屏操作
}

// 修改
void modifyperson(addressbooks* abs)
{
	cout << "输入要修改的人" << endl;
	string name;
	cin >> name;

	int ret = isexist(abs, name);
	if (ret != -1)
	{
		string name;
		cout << "请输入姓名：" << endl;
		cin >> name;
		abs->personarray[ret].m_name = name;

		int sex = 0;
		cout << "请输入性别：(1-男 2-女)" << endl;
		while (true)
		{
			cin >> sex;
			if (sex == 1 || sex == 2)
			{
				abs->personarray[ret].m_sex = sex;
				break;
			}


			cout << "输入错误，重新输入" << endl;

		}




		int age = 0;
		cout << "请输入年龄：" << endl;
		cin >> age;
		abs->personarray[ret].m_age = age;

		string phone;
		cout << "请输入电话：" << endl;
		cin >> phone;
		abs->personarray[ret].m_phone = phone;

		string adds;
		cout << "请输入住址：" << endl;
		cin >> adds;
		abs->personarray[ret].m_addr = adds;
		cout << "修改成功" << endl;
	}

	else
	{
		cout << "查无此人" << endl;
	}
	system("pause");//请按任意键继续
	system("cls");//清屏操作
}

void cleanperson(addressbooks* abs)
{
	abs->m_size = 0;
	cout << "通讯录已清空" << endl;
	system("pause");//请按任意键继续
	system("cls");//清屏操作

}



int main() 
{
	//创建通讯录结构体变量
	addressbooks abs;
	//初始化通讯录当前人员个数
	abs.m_size = 0;



	int select = 0;//创建用户选择输入变量

	while (true)
	{

		//菜单调用
		showMenu();

		cin >> select;

		switch (select)
		{
		case 1: //1.添加联系人
			addperson(&abs);//利用地址传递 ，可以修饰实参



			break;
		case 2: //2.显示联系人
			showperson(&abs);
			break;
		case 3://3.删除联系人
			deleteperson(&abs);
			/*cout << "请输入删除人姓名" << endl;
			string name;
			cin >> name;
			if (isexist(&abs, name) == -1)
			{
				cout << "查无此人" << endl;
			}
			else
			{
				cout << "找到此人" << endl;
			}*/
			break;
		case 4://4.查找联系人
			findperson(&abs);
			break;
		case 5://5.修改联系人
			modifyperson(&abs);
			break;
		case 6://6.清空联系人
			break;
		case 0://7.退出通讯录
			cout << "欢迎下次使用" << endl;
			system("pause");
			return 0;
			break;
		default:
			break;

		}
	}
	system("pause");
	return 0;
}
